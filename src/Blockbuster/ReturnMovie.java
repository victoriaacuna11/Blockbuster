/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Blockbuster;

import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author victoriaacuna
 */
public class ReturnMovie extends javax.swing.JFrame {

    
    public ReturnMovie() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        if(Cartelera.firstMovie){
            this.fillMovies(this.movieSelected);
        } else {
            this.noMovies(this.movieSelected);
            this.movieSelected.setEnabled(false);
            this.btnReturn.setEnabled(false);
        }
        if(!Cartelera.firstUser){
            this.btnReturn.setEnabled(false);
            this.movieSelected.setEnabled(false);
            JOptionPane.showMessageDialog(this, "No hay ningún usuario en la base de datos. Lo sentimos.", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void fillMovies(JComboBox cb){
        for (int i = 0; i < Cartelera.movieIndexes.length; i++) {
            cb.addItem(Cartelera.movies[Cartelera.movieIndexes[i].getArrayIndex()].getID()+"-. \""+
                    Cartelera.movies[Cartelera.movieIndexes[i].getArrayIndex()].getName()+"\" (" + 
                    Cartelera.movies[Cartelera.movieIndexes[i].getArrayIndex()].getGenre()+")");
        }
        
    }
    
    public void noMovies(JComboBox cb){
        cb.addItem("Lo sentimos. La base de datos se encuentra vacía.");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnGoBack = new javax.swing.JButton();
        movieSelected = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        userCI = new javax.swing.JTextField();
        btnReturn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("DEVOLVER UNA PELÍCULA");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 76, -1, -1));

        btnGoBack.setText("VOLVER");
        btnGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnGoBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 504, 130, 39));

        getContentPane().add(movieSelected, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 204, 342, -1));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("SELECCIONE UNA PELÍCULA");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 170, -1, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("INTRODUZCA SU NÚMERO DE CÉDULA");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 285, -1, -1));

        userCI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userCIActionPerformed(evt);
            }
        });
        getContentPane().add(userCI, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 319, 342, -1));

        btnReturn.setText("DEVOLVER");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });
        getContentPane().add(btnReturn, new org.netbeans.lib.awtextra.AbsoluteConstraints(254, 504, 130, 39));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("La película que seleccionó ha de estar reservada por");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 391, -1, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("usted para que la devolución se realice correctamente.");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 419, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon3.png"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 420, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoBackActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnGoBackActionPerformed

    private void userCIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userCIActionPerformed
        
    }//GEN-LAST:event_userCIActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        if(Cartelera.firstMovie){
            if(this.validateCI()){
                int userID = Integer.parseInt(this.userCI.getText().substring(1));
                String userLiteralID = this.userCI.getText().substring(0,1);
                int posUser = Cartelera.buscarUsuario(userID, userLiteralID);
                if(posUser!=-1){
                    String[] infoMovie = this.movieSelected.getSelectedItem().toString().split("-");
                    int movieID = Integer.parseInt(infoMovie[0]);
                    int posMovie = Cartelera.buscarPelicula(movieID);
                    if(Cartelera.movies[posMovie].getCI().equals(Cartelera.users[posUser].getCI())){
                        Cartelera.movies[posMovie].setCI("");
                        Cartelera.movies[posMovie].setDate("");
                        
                        if(Cartelera.users[posUser].peliculas.length==1){
                            Cartelera.users[posUser].firstMovie=false;
                            Cartelera.users[posUser].peliculas = new Pelicula[0];
                        } else {
                            Pelicula[] p = new Pelicula[Cartelera.users[posUser].peliculas.length-1];
                            int cont=0;
                            for (int i = 0; i < Cartelera.users[posUser].peliculas.length; i++) {
                                if(Cartelera.users[posUser].peliculas[i].getName()!=Cartelera.movies[posMovie].getName()){
                                    p[cont]=Cartelera.users[posUser].peliculas[i];
                                    cont=cont+1;
                                }
                            }
                            Cartelera.users[posUser].peliculas=p;
                        }
                        
                        for (int i = 0; i < Cartelera.users[posUser].peliculas.length; i++) {
                            System.out.println(Cartelera.users[posUser].peliculas[i].getName());
                        }
                        
                        this.setVisible(false);
                    } else {
                        JOptionPane.showMessageDialog(this, "Su usuario no ha reservado la película que eligió.\nPor favor, revise.", "ERROR", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "La cédula no está inscrita en el sistema.\nPor favor validar que esté correctamente escrita.", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Cédula inválida.\nDebe seguir el siguiente formato: A99999999", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            
        }
    }//GEN-LAST:event_btnReturnActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReturnMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReturnMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReturnMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReturnMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReturnMovie().setVisible(true);
            }
        });
    }
    
    public boolean validateCI(){
        
        if(!this.userCI.getText().isEmpty() && this.userCI.getText().length()<10 && this.userCI.getText().length()>1){
            String literalID = this.userCI.getText().substring(0, 1);
            String numericID = this.userCI.getText().substring(1);
            boolean isNumeric = Metodos.isNumeric(numericID);
            boolean isLiteral = Metodos.isNumeric(literalID);
            
            if(isNumeric && !isLiteral){
                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGoBack;
    private javax.swing.JButton btnReturn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    public javax.swing.JComboBox<String> movieSelected;
    private javax.swing.JTextField userCI;
    // End of variables declaration//GEN-END:variables
}
